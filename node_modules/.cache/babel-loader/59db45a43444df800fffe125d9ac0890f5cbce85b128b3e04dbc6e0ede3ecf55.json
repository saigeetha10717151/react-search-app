{"ast":null,"code":"var _jsxFileName = \"/home/10717151@ltimindtree.com/Documents/sample/react_search_app/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport data from '../data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [showsuggestions, setShowSugegestions] = useState(false);\n  const handleSearch = e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n    if (term.length > 0) {\n      const filteredData = data.states.filter(item => item.state.toLowerCase().includes(term.toLowerCase()));\n      console.log('filteredData', filteredData, data);\n      setSuggestions(filteredData);\n      setShowSugegestions(true);\n    } else {\n      setShowSugegestions(false);\n    }\n  };\n  const handleSugessionClick = suggestion => {\n    setSearchTerm(suggestion);\n    setShowSugegestions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"search\",\n      value: searchTerm,\n      onChange: e => handleSearch(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), showsuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSugessionClick(suggestion),\n        children: suggestion.state\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchBar, \"WuS7rYU7Da6oNh5OwrQtJ+Qa5B8=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","data","jsxDEV","_jsxDEV","SearchBar","_s","searchTerm","setSearchTerm","suggestions","setSuggestions","showsuggestions","setShowSugegestions","handleSearch","e","term","target","value","length","filteredData","states","filter","item","state","toLowerCase","includes","console","log","handleSugessionClick","suggestion","className","children","type","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["/home/10717151@ltimindtree.com/Documents/sample/react_search_app/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport  data from '../data.json'\n\nfunction SearchBar() {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [suggestions, setSuggestions] = useState([]);\n    const [showsuggestions, setShowSugegestions] = useState(false);\n    \n\n    const handleSearch = (e) => {\n        const term = e.target.value;\n        setSearchTerm(term);\n        if (term.length > 0) {\n            const filteredData = data.states.filter((item) =>\n                item.state.toLowerCase().includes(term.toLowerCase())\n            );\n            console.log('filteredData', filteredData, data)\n            setSuggestions(filteredData);\n            setShowSugegestions(true);\n        } else {\n            setShowSugegestions(false);\n        }\n    };\n\n    const handleSugessionClick = (suggestion) => {\n        setSearchTerm(suggestion)\n        setShowSugegestions(false);\n    }\n\n    return (\n        <div className=\"search\">\n            <input\n                type=\"text\"\n                name=\"search\"\n                value={searchTerm}\n                onChange={(e) => handleSearch(e)}\n            />\n            {showsuggestions && (\n                <ul>\n                    {suggestions.map((suggestion, index) => (\n                        <li key={index} onClick={() => handleSugessionClick(suggestion)}>{suggestion.state}</li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n}\n\nexport default SearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAQC,IAAI,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,eAAe,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAG9D,MAAMY,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3BT,aAAa,CAACO,IAAI,CAAC;IACnB,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;MACjB,MAAMC,YAAY,GAAGjB,IAAI,CAACkB,MAAM,CAACC,MAAM,CAAEC,IAAI,IACzCA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,IAAI,CAACS,WAAW,CAAC,CAAC,CACxD,CAAC;MACDE,OAAO,CAACC,GAAG,CAAC,cAAc,EAAER,YAAY,EAAEjB,IAAI,CAAC;MAC/CQ,cAAc,CAACS,YAAY,CAAC;MAC5BP,mBAAmB,CAAC,IAAI,CAAC;IAC7B,CAAC,MAAM;MACHA,mBAAmB,CAAC,KAAK,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMgB,oBAAoB,GAAIC,UAAU,IAAK;IACzCrB,aAAa,CAACqB,UAAU,CAAC;IACzBjB,mBAAmB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,oBACIR,OAAA;IAAK0B,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnB3B,OAAA;MACI4B,IAAI,EAAC,MAAM;MACXC,IAAI,EAAC,QAAQ;MACbhB,KAAK,EAAEV,UAAW;MAClB2B,QAAQ,EAAGpB,CAAC,IAAKD,YAAY,CAACC,CAAC;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACD3B,eAAe,iBACZP,OAAA;MAAA2B,QAAA,EACKtB,WAAW,CAAC8B,GAAG,CAAC,CAACV,UAAU,EAAEW,KAAK,kBAC/BpC,OAAA;QAAgBqC,OAAO,EAAEA,CAAA,KAAMb,oBAAoB,CAACC,UAAU,CAAE;QAAAE,QAAA,EAAEF,UAAU,CAACN;MAAK,GAAzEiB,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyE,CAC1F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAChC,EAAA,CA3CQD,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AA6ClB,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}